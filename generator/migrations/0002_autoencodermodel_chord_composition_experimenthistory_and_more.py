# Generated by Django 4.1 on 2023-09-30 11:52

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("generator", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="AutoencoderModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("model_file", models.FileField(upload_to="autoencoders/")),
                ("date_trained", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="Chord",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name="Composition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name="ExperimentHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_conducted", models.DateTimeField(auto_now_add=True)),
                ("algorithm_used", models.CharField(max_length=200)),
                ("parameters", models.JSONField()),
                ("metrics", models.JSONField()),
                ("notes", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Note",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=10)),
                (
                    "frequency",
                    models.FloatField(help_text="Frequency of the note in Hz"),
                ),
                (
                    "duration",
                    models.FloatField(help_text="Duration of the note in seconds"),
                ),
                (
                    "volume",
                    models.FloatField(
                        help_text="Intensity of the note, typically between 0 and 1"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RhythmPattern",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Descriptive name of the rhythm pattern",
                        max_length=100,
                    ),
                ),
                (
                    "duration_pattern",
                    models.TextField(
                        help_text="Pattern of durations, represented as a list of numbers in string format, e.g.: '[0.5, 0.25, 0.25]'"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Scale",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                (
                    "notes",
                    models.ManyToManyField(related_name="scales", to="generator.note"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="MusicFeature",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("spectrogram", models.FileField(upload_to="features/")),
                ("tempo", models.FloatField()),
                ("key_signature", models.CharField(max_length=50)),
                ("time_signature", models.CharField(max_length=10)),
                ("harmonic_progression", models.TextField()),
                (
                    "composition",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="generator.composition",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="MusicCluster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("cluster_id", models.PositiveIntegerField()),
                (
                    "composition",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="generator.composition",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="GenerationHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_generated", models.DateTimeField(auto_now_add=True)),
                ("algorithm_used", models.CharField(max_length=200)),
                (
                    "user_feedback",
                    models.PositiveIntegerField(
                        help_text="Rating given by user, e.g., from 1 to 5"
                    ),
                ),
                ("other_metrics", models.JSONField()),
                (
                    "composition",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="generator.composition",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FeatureVector",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "vector",
                    models.JSONField(
                        help_text="Numeric representation of music features"
                    ),
                ),
                (
                    "composition",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="generator.composition",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DimensionalityReduction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "reduced_vector",
                    models.JSONField(help_text="Reduced dimension representation"),
                ),
                ("method_used", models.CharField(max_length=100)),
                (
                    "original_vector",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="generator.featurevector",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CompositionNote",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "start_time",
                    models.FloatField(
                        help_text="Start time of the note in the composition, in seconds"
                    ),
                ),
                (
                    "end_time",
                    models.FloatField(
                        help_text="End time of the note in the composition, in seconds"
                    ),
                ),
                (
                    "composition",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="generator.composition",
                    ),
                ),
                (
                    "note",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="generator.note"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CompositionChord",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "start_time",
                    models.FloatField(
                        help_text="Start time of the chord in the composition, in seconds"
                    ),
                ),
                (
                    "end_time",
                    models.FloatField(
                        help_text="End time of the chord in the composition, in seconds"
                    ),
                ),
                (
                    "chord",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="generator.chord",
                    ),
                ),
                (
                    "composition",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="generator.composition",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="composition",
            name="chords",
            field=models.ManyToManyField(
                related_name="compositions",
                through="generator.CompositionChord",
                to="generator.chord",
            ),
        ),
        migrations.AddField(
            model_name="composition",
            name="composer",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="compositions",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="composition",
            name="notes",
            field=models.ManyToManyField(
                related_name="compositions",
                through="generator.CompositionNote",
                to="generator.note",
            ),
        ),
        migrations.AddField(
            model_name="composition",
            name="rhythm_pattern",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="generator.rhythmpattern",
            ),
        ),
        migrations.AddField(
            model_name="chord",
            name="notes",
            field=models.ManyToManyField(related_name="chords", to="generator.note"),
        ),
        migrations.AddField(
            model_name="chord",
            name="scale",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="chords",
                to="generator.scale",
            ),
        ),
    ]
